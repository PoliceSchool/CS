
void merge(int *a, int *b, int left, int mid, int right) {
	int i = left, j = mid + 1, k = left;
	while ((i <= mid) && (j <= right))
		if (a[i] >= a[j])
			b[k++] = a[j++];
		else
			b[k++] = a[i++];
	while (i != mid + 1)
		b[k++] = a[i++];
	while (j != right + 1)
		b[k++] = a[j++];
	for (int i = left; i <= right; i++)
		a[i] = b[i];
}

void merge_sort(int *a, int *b, int left, int right) {
	int mid;
	if (left < right) {
		mid = (left + right)/2;
		merge_sort(a, b, left, mid);
		merge_sort(a, b, mid + 1, right);
		merge(a, b, left, mid, right);
	}
}


int main(void) {
	int a[10] = { 15,0,6,89,45,100,5,10001,78,999 };
	int *b = (int*)malloc(sizeof(int) * 10);
	memset(b, 0, 10);
	merge_sort(a, b, 0, 9);
	for (int i = 0; i < 10; i++) {
		cout << a[i] << ",";
	}
	return 0;
}
